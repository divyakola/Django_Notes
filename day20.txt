		Django Admin
		-------------
Admin sites are integral part of any website. 

Django provides an admin app.

We will create our own admin site called cadmin.

We are communicating the django admin site first we need to create a superuser

	we can create a superuser,by following command

	python manage.py createsuperuser


In django admin site,The Groups and Users under the "Authentication and Autherization" are coming from django.contrib.auth.

Django uses
	Groups model to handle the permissions.
	The Users model refers to the users of the site.

Adding our models into Django admin site:
-----------------------------------------
By default ,django admin app does not load any model from the apps we are created.

To add a model to the django admin site we have to modify admin.py file,it is by default available inside every app.

Note:
------
If admin.py file is not available inside the our application,just we can create a new file and called it as admin.py and then add our model into admin.py file.

ex1:
----
create a django project to add our model into django admin pannel?

step1:
-----
to create a django project

D:\siva\django5pm@april2024>sivavenv\scripts\activate

D:\siva\django5pm@april2024>()

(sivavenv) D:\siva\django5pm@april2024>django-admin startproject proj23

step2:
-----
goto project location and to create an application in our project.

(sivavenv) D:\siva\django5pm@april2024>cd proj23

(sivavenv) D:\siva\django5pm@april2024\proj23>python manage.py startapp app23

step3:
-----
to install our application in the settings.py file of the project

	settings.py
	-----------
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app23'
]

step4:
-----
to define a model class in the models.py file of the application

	models.py
	--------
from django.db import models

# Create your models here.
class Student(models.Model):
    sid=models.IntegerField(primary_key=True)
    sname=models.CharField(max_length=30)
    sadd=models.CharField(max_length=30)
    sfee=models.DecimalField(max_digits=6,decimal_places=2)
    sstatus=models.BooleanField()
    sdob=models.DateField()
    def __str__(self):
        return "%d %s %s %.2f %s %s"%(self.sid,self.sname,self.sadd,self.sfee,self.sstatus,self.sdob)

step5:
-----
to check the errors in our model class

(sivavenv) D:\siva\django5pm@april2024\proj23>python manage.py check
System check identified no issues (0 silenced).

step6:
-----
to create a model i.e., to apply the makemigrations

(sivavenv) D:\siva\django5pm@april2024\proj23>python manage.py makemigrations
Migrations for 'app23':
  app23\migrations\0001_initial.py
    - Create model Student

step7:
------
to generate the tables in the specified database i.e., to apply the migrate

(sivavenv) D:\siva\django5pm@april2024\proj23>python manage.py migrate

step8:
-----
to create a superuser

(sivavenv) D:\siva\django5pm@april2024\proj23>python manage.py createsuperuser
Username (leave blank to use 'lenovo'): siva123
Email address: siva@gmail.com
Password:
Password (again):
The password is too similar to the username.
Bypass password validation and create user anyway? [y/N]: y
Superuser created successfully.

step9:
------
to start the server

(sivavenv) D:\siva\django5pm@april2024\proj23>python manage.py runserver

step10:
------
to send the request to the django admin pannel

	http://127.0.0.1:8000/admin


note:
------
if we want to add our model class in the django admin pannel, in that case first we need to register our model class in the admin.py file.

	admin.py
	-------
from django.contrib import admin
from .models import Student
# Register your models here.
admin.site.register(Student)
	